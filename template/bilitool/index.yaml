apiVersion: app.claw.cloud/v1
kind: Template
metadata:
  name: bilitool
spec:
  title: 'BiliTool'
  type: official
  author: RayWangQvQ
  author_id: 31154238
  date: 2025-07-20
  url: 'https://github.com/RayWangQvQ/BiliBiliToolPro'
  gitRepo: 'https://github.com/RayWangQvQ/BiliBiliToolPro'
  description: 'BiliTool is an automated task execution tool that acts as a helpful assistant for BiliBili, following pre-configured commands to complete planned tasks within specified frequencies and timeframes when we forget to do them.'
  readme: 'https://raw.githubusercontent.com/ClawCloud/Run-Template/refs/heads/main/template/bilitool/README.md'
  icon: 'https://raw.githubusercontent.com/RayWangQvQ/BiliBiliToolPro/refs/heads/main/src/Ray.BiliBiliTool.Web/wwwroot/favicon.png'
  templateType: inline
  categories:
    - tool
    - Free-Plan-Compatible
  defaults:
    app_host:
      type: string
      value: ${{ random(8) }}
    app_name:
      type: string
      value: bilitool-${{ random(8) }}
  inputs:

---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: ${{ defaults.app_name }}
  annotations:
    originImageName: ghcr.io/raywangqvq/bili_tool_web:latest
    deploy.run.claw.cloud/minReplicas: '1'
    deploy.run.claw.cloud/maxReplicas: '1'
  labels:
    run.claw.cloud/app-deploy-manager: ${{ defaults.app_name }}
    app: ${{ defaults.app_name }}
spec:
  replicas: 1
  revisionHistoryLimit: 1
  minReadySeconds: 10
  serviceName: ${{ defaults.app_name }}
  selector:
    matchLabels:
      app: ${{ defaults.app_name }}
  template:
    metadata:
      labels:
        app: ${{ defaults.app_name }}
    spec:
      terminationGracePeriodSeconds: 10
      automountServiceAccountToken: false
      containers:
        - name: ${{ defaults.app_name }}
          image: ghcr.io/raywangqvq/bili_tool_web:latest
          env:
            - name: TZ
              value: Asia/Shanghai
          resources:
            requests:
              cpu: 25m
              memory: 51Mi
            limits:
              cpu: 500m
              memory: 1024Mi
          command: []
          args: []
          ports:
            - containerPort: 8080
          imagePullPolicy: IfNotPresent
          volumeMounts:
            - name: vn-config
              mountPath: /app/config
      volumes: []
  volumeClaimTemplates:
    - metadata:
        annotations:
          path: /app/config
          value: '1'
        name: vn-config
      spec:
        accessModes:
          - ReadWriteOnce
        resources:
          requests:
            storage: 1Gi

---
apiVersion: v1
kind: Service
metadata:
  name: ${{ defaults.app_name }}
  labels:
    run.claw.cloud/app-deploy-manager: ${{ defaults.app_name }}
spec:
  ports:
    - port: 8080
  selector:
    app: ${{ defaults.app_name }}

---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: ${{ defaults.app_name }}
  labels:
    run.claw.cloud/app-deploy-manager: ${{ defaults.app_name }}
    run.claw.cloud/app-deploy-manager-domain: ${{ defaults.app_host }}
  annotations:
    kubernetes.io/ingress.class: nginx
    nginx.ingress.kubernetes.io/proxy-body-size: 32m
    nginx.ingress.kubernetes.io/server-snippet: |
      client_header_buffer_size 64k;
      large_client_header_buffers 4 128k;
    nginx.ingress.kubernetes.io/ssl-redirect: 'true'
    nginx.ingress.kubernetes.io/backend-protocol: HTTP
    nginx.ingress.kubernetes.io/rewrite-target: /$2
    nginx.ingress.kubernetes.io/client-body-buffer-size: 64k
    nginx.ingress.kubernetes.io/proxy-buffer-size: 64k
    nginx.ingress.kubernetes.io/configuration-snippet: |
      if ($request_uri ~* \.(js|css|gif|jpe?g|png)) {
        expires 30d;
        add_header Cache-Control "public";
      }
spec:
  rules:
    - host: ${{ defaults.app_host }}.${{ CLAWCLOUD_CLOUD_DOMAIN }}
      http:
        paths:
          - pathType: Prefix
            path: /()(.*)
            backend:
              service:
                name: ${{ defaults.app_name }}
                port:
                  number: 8080
  tls:
    - hosts:
        - ${{ defaults.app_host }}.${{ CLAWCLOUD_CLOUD_DOMAIN }}
      secretName: ${{ CLAWCLOUD_CERT_SECRET_NAME }}
---

apiVersion: app.claw.cloud/v1
kind: App
metadata:
  name: ${{ defaults.app_name }}
  labels:
    run.claw.cloud/app-deploy-manager: ${{ defaults.app_name }}
spec:
  data:
    url: https://${{ defaults.app_host }}.${{ CLAWCLOUD_CLOUD_DOMAIN }}
  displayType: normal
  icon: "https://raw.githubusercontent.com/RayWangQvQ/BiliBiliToolPro/refs/heads/main/src/Ray.BiliBiliTool.Web/wwwroot/favicon.png"
  name: bilitool
  type: link
