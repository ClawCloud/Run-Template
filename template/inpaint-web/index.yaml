apiVersion: app.claw.cloud/v1
kind: Template
metadata:
  name: inpaint-web
spec:
  title: 'inpaint-web'
  type: official
  author: ClawCloud Run
  author_id: 180503656
  date: 2025-04-17
  url: 'https://github.com/lxfater/inpaint-web'
  gitRepo: 'https://github.com/lxfater/inpaint-web'
  description: 'A free and open-source inpainting & image-upscaling tool powered by webgpu and wasm on the browser.'
  readme: 'https://raw.githubusercontent.com/ClawCloud/Run-Template/refs/heads/main/template/inpaint-web/README.md'
  icon: 'https://avatars.githubusercontent.com/u/22794120?s=48&v=4'
  templateType: inline
  categories:
    - tool
  defaults:
    app_name:
      type: string
      value: inpaint-web-${{ random(8) }}
    app_host:
      type: string
      value: ${{ random(8) }}
  inputs:
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: ${{ defaults.app_name }}
  annotations:
    originImageName: yangchuansheng/inpaint-web
    deploy.run.claw.cloud/minReplicas: '1'
    deploy.run.claw.cloud/maxReplicas: '1'
  labels:
    run.claw.cloud/app-deploy-manager: ${{ defaults.app_name }}
    app: ${{ defaults.app_name }}
spec:
  replicas: 1
  revisionHistoryLimit: 1
  selector:
    matchLabels:
      app: ${{ defaults.app_name }}
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 1
      maxSurge: 0
  template:
    metadata:
      labels:
        app: ${{ defaults.app_name }}
    spec:
      automountServiceAccountToken: false
      containers:
        - name: ${{ defaults.app_name }}
          image: yangchuansheng/inpaint-web
          env: []
          resources:
            requests:
              cpu: 50m
              memory: 100Mi
            limits:
              cpu: 1000m
              memory: 1000Mi
          command: []
          args: []
          ports:
            - containerPort: 5173
          imagePullPolicy: IfNotPresent
          volumeMounts: []
      volumes: []


---
apiVersion: v1
kind: Service
metadata:
  name: ${{ defaults.app_name }}
  labels:
    run.claw.cloud/app-deploy-manager: ${{ defaults.app_name }}
spec:
  ports:
    - port: 5173
  selector:
    app: ${{ defaults.app_name }}


---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: ${{ defaults.app_name }}
  labels:
    run.claw.cloud/app-deploy-manager: ${{ defaults.app_name }}
    run.claw.cloud/app-deploy-manager-domain: ${{ defaults.app_host }}
  annotations:
    kubernetes.io/ingress.class: nginx
    nginx.ingress.kubernetes.io/proxy-body-size: 32m
    nginx.ingress.kubernetes.io/server-snippet: |
      client_header_buffer_size 64k;
      large_client_header_buffers 4 128k;
    nginx.ingress.kubernetes.io/ssl-redirect: 'false'
    nginx.ingress.kubernetes.io/backend-protocol: HTTP
    nginx.ingress.kubernetes.io/rewrite-target: /$2
    nginx.ingress.kubernetes.io/client-body-buffer-size: 64k
    nginx.ingress.kubernetes.io/proxy-buffer-size: 64k
    nginx.ingress.kubernetes.io/proxy-send-timeout: '300'
    nginx.ingress.kubernetes.io/proxy-read-timeout: '300'
    nginx.ingress.kubernetes.io/configuration-snippet: |
      if ($request_uri ~* \.(js|css|gif|jpe?g|png)) {
        expires 30d;
        add_header Cache-Control "public";
      }
spec:
  rules:
    - host: ${{ defaults.app_host }}.${{ CLAWCLOUD_CLOUD_DOMAIN }}
      http:
        paths:
          - pathType: Prefix
            path: /()(.*)
            backend:
              service:
                name: ${{ defaults.app_name }}
                port:
                  number: 5173
  tls:
    - hosts:
        - ${{ defaults.app_host }}.${{ CLAWCLOUD_CLOUD_DOMAIN }}
      secretName: ${{ CLAWCLOUD_CERT_SECRET_NAME }}