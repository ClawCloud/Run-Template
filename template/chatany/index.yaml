apiVersion: app.claw.cloud/v1
kind: Template
metadata:
  name: chatany
spec:
  title: 'chatany'
  type: official
  author: ClawCloud Run
  author_id: 180503656
  date: 2025-04-17
  url: 'https://github.com/ChatAnyTeam/ChatAny'
  gitRepo: 'https://github.com/ChatAnyTeam/ChatAny'
  description: 'One-click to own your own ChatGPT+StabilityAI+Midjourney web service'
  readme: 'https://raw.githubusercontent.com/ClawCloud/Run-Template/refs/heads/main/template/chatany/README.md'
  icon: 'https://raw.githubusercontent.com/ChatAnyTeam/ChatAny/master/public/favicon.ico'
  templateType: inline
  categories:
    - ai
  defaults:
    app_host:
      # number or string..
      type: string
      value: ${{ random(8) }}
    app_name:
      type: string
      value: chatany-${{ random(8) }}
  inputs:
    OPENAI_API_KEY:
      description: 'OpenAI API Key'
      type: string
      default: ''
      required: true
    BASE_URL:
      description: 'Custom API Base URL'
      type: string
      default: ''
      required: false
    MJ_SERVER_ID:
      description: 'Discord Server ID'
      type: string
      default: ''
      required: true
    MJ_CHANNEL_ID:
      description: 'Discord Channel ID'
      type: string
      default: ''
      required: true
    MJ_USER_TOKEN:
      description: 'Discord User Token'
      type: string
      default: ''
      required: true
    MJ_DISCORD_PROXY:
      description: 'Discord Proxy'
      type: string
      default: 'https://discord.com'
      required: false
    MJ_DISCORD_WSS_PROXY:
      description: 'Discord Websocket Proxy'
      type: string
      default: 'wss://gateway.discord.gg'
      required: false
    MJ_DISCORD_CDN_PROXY:
      description: 'Discord CDN Proxy'
      type: string
      default: 'https://cdn.discordapp.com'
      required: false
    CODE:
      description: 'Access Code'
      type: string
      default: ''
      required: false
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: ${{ defaults.app_name }}
  annotations:
    originImageName: licoy/chatany:v3.5.0
    deploy.run.claw.cloud/minReplicas: '1'
    deploy.run.claw.cloud/maxReplicas: '1'
  labels:
    run.claw.cloud/app-deploy-manager: ${{ defaults.app_name }}
    app: ${{ defaults.app_name }}
spec:
  replicas: 1
  revisionHistoryLimit: 1
  selector:
    matchLabels:
      app: ${{ defaults.app_name }}
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 1
      maxSurge: 0
  template:
    metadata:
      labels:
        app: ${{ defaults.app_name }}
    spec:
      automountServiceAccountToken: false
      containers:
        - name: ${{ defaults.app_name }}
          image: licoy/chatany:v3.5.0
          env:
            - name: OPENAI_API_KEY
              value: ${{ inputs.OPENAI_API_KEY }}
            - name: BASE_URL
              value: ${{ inputs.BASE_URL }}
            - name: MJ_SERVER_ID
              value: ${{ inputs.MJ_SERVER_ID }}
            - name: MJ_CHANNEL_ID
              value: ${{ inputs.MJ_CHANNEL_ID }}
            - name: MJ_USER_TOKEN
              value: ${{ inputs.MJ_USER_TOKEN }}
            - name: MJ_DISCORD_PROXY
              value: ${{ inputs.MJ_DISCORD_PROXY }}
            - name: MJ_DISCORD_WSS_PROXY
              value: ${{ inputs.MJ_DISCORD_WSS_PROXY }}
            - name: MJ_DISCORD_CDN_PROXY
              value: ${{ inputs.MJ_DISCORD_CDN_PROXY }}
            - name: CODE
              value: ${{ inputs.CODE }}
          resources:
            requests:
              cpu: 50m
              memory: 102Mi
            limits:
              cpu: 1000m
              memory: 1024Mi
          command: []
          args: []
          ports:
            - containerPort: 3000
          imagePullPolicy: IfNotPresent
          volumeMounts: []
      volumes: []
---
apiVersion: v1
kind: Service
metadata:
  name: ${{ defaults.app_name }}
  labels:
    run.claw.cloud/app-deploy-manager: ${{ defaults.app_name }}
spec:
  ports:
    - port: 3000
  selector:
    app: ${{ defaults.app_name }}
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: ${{ defaults.app_name }}
  labels:
    run.claw.cloud/app-deploy-manager: ${{ defaults.app_name }}
    run.claw.cloud/app-deploy-manager-domain: ${{ defaults.app_host }}
  annotations:
    kubernetes.io/ingress.class: nginx
    nginx.ingress.kubernetes.io/proxy-body-size: 32m
    nginx.ingress.kubernetes.io/server-snippet: |
      client_header_buffer_size 64k;
      large_client_header_buffers 4 128k;
    nginx.ingress.kubernetes.io/ssl-redirect: 'false'
    nginx.ingress.kubernetes.io/backend-protocol: HTTP
    nginx.ingress.kubernetes.io/rewrite-target: /$2
    nginx.ingress.kubernetes.io/client-body-buffer-size: 64k
    nginx.ingress.kubernetes.io/proxy-buffer-size: 64k
    nginx.ingress.kubernetes.io/proxy-send-timeout: '300'
    nginx.ingress.kubernetes.io/proxy-read-timeout: '300'
    nginx.ingress.kubernetes.io/configuration-snippet: |
      if ($request_uri ~* \.(js|css|gif|jpe?g|png)) {
        expires 30d;
        add_header Cache-Control "public";
      }
spec:
  rules:
    - host: ${{ defaults.app_host }}.${{ CLAWCLOUD_CLOUD_DOMAIN }}
      http:
        paths:
          - pathType: Prefix
            path: /()(.*)
            backend:
              service:
                name: ${{ defaults.app_name }}
                port:
                  number: 3000
  tls:
    - hosts:
        - ${{ defaults.app_host }}.${{ CLAWCLOUD_CLOUD_DOMAIN }}
      secretName: ${{ CLAWCLOUD_CERT_SECRET_NAME }}

